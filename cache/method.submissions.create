<div class="method_details ">
<h2 class="api_method_name" data-subtopic="Submissions" name="method.submissions.create">
<a href="#method.submissions.create" name="method.submissions.create">
      Submit an assignment
    </a>
<span class="defined-in"><a href="https://github.com/instructure/canvas-lms/blob/master/app/controllers/submissions_controller.rb">SubmissionsController#create</a></span>
</h2>
<h3 class="endpoint">
    POST /api/v1/courses/:course_id/assignments/:assignment_id/submissions
  </h3>
<h3 class="endpoint">
    POST /api/v1/sections/:section_id/assignments/:assignment_id/submissions
  </h3>
<p>Make a submission for an assignment. You must be enrolled as a student in
the course/section to do this.</p>
<p>All online turn-in submission types are supported in this API. However,
there are a few things that are not yet supported:</p>
<ul><li>
<p>Files can be submitted based on a file ID of a user or group file. However,
there is no API yet for listing the user and group files, or uploading new
files via the API. A file upload API is coming soon.</p>
</li><li>
<p>Media comments can be submitted, however, there is no API yet for creating
a media comment to submit.</p>
</li><li>
<p>Integration with Google Docs is not yet supported.</p>
</li></ul>
<h4>Request Parameters:</h4>
<table class="request-params">
<thead>
<tr>
<th class="param-name">Parameter</th>
<th class="param-req"></th>
<th class="param-type">Type</th>
<th class="param-desc">Description</th>
</tr>
</thead>
<tbody>
<tr class="request-param">
<td>comment[text_comment]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Include a textual comment with the submission.</p>
</td>
</tr>
<tr class="request-param">
<td>submission[submission_type]</td>
<td>
        
        Required
        
      </td>
<td>string</td>
<td class="param-desc">
<p>The type of submission being made. The assignment submission_types must
include this submission type as an allowed option, or the submission will
be rejected with a 400 error.</p>
<p>The submission_type given determines which of the following parameters is
used. For instance, to submit a URL, submission [submission_type] must be
set to âonline_urlâ, otherwise the submission [url] parameter will be
ignored.</p>
<p class="param-values">
<span class="allowed">Allowed values:</span> <code class="enum">online_text_entry</code>, <code class="enum">online_url</code>, <code class="enum">online_upload</code>, <code class="enum">media_recording</code>, <code class="enum">basic_lti_launch</code>
</p>
</td>
</tr>
<tr class="request-param">
<td>submission[body]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Submit the assignment as an HTML document snippet. Note this HTML snippet
will be sanitized using the same ruleset as a submission made from the
Canvas web UI. The sanitized HTML will be returned in the response as the
submission body. Requires a submission_type of âonline_text_entryâ.</p>
</td>
</tr>
<tr class="request-param">
<td>submission[url]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Submit the assignment as a URL. The URL scheme must be âhttpâ or âhttpsâ,
no âftpâ or other URL schemes are allowed. If no scheme is given (e.g. â<a href="www.example.com">www.example.com</a>â) then âhttpâ will be assumed.
Requires a submission_type of âonline_urlâ or âbasic_lti_launchâ.</p>
</td>
</tr>
<tr class="request-param">
<td>submission[file_ids][]</td>
<td>
</td>
<td>integer</td>
<td class="param-desc">
<p>Submit the assignment as a set of one or more previously uploaded files
residing in the submitting user's files section (or the group's
files section, for group assignments).</p>
<p>To upload a new file to submit, see the submissions
<a href="submissions.html#method.submissions_api.create_file" title="Upload a file API">Upload a file API</a>.</p>
<p>Requires a submission_type of âonline_uploadâ.</p>
</td>
</tr>
<tr class="request-param">
<td>submission[media_comment_id]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>The media comment id to submit. Media comment ids can be submitted via this
API, however, note that there is not yet an API to generate or list
existing media comments, so this functionality is currently of limited use.</p>
<p>Requires a submission_type of âmedia_recordingâ.</p>
</td>
</tr>
<tr class="request-param">
<td>submission[media_comment_type]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>The type of media comment being submitted.</p>
<p class="param-values">
<span class="allowed">Allowed values:</span> <code class="enum">audio</code>, <code class="enum">video</code>
</p>
</td>
</tr>
</tbody>
</table>
</div>