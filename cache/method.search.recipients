<div class="method_details ">
<h2 class="api_method_name" data-subtopic="Search" name="method.search.recipients">
<a href="#method.search.recipients" name="method.search.recipients">
      Find recipients
    </a>
<span class="defined-in"><a href="https://github.com/instructure/canvas-lms/blob/master/app/controllers/search_controller.rb">SearchController#recipients</a></span>
</h2>
<h3 class="endpoint">
    GET /api/v1/conversations/find_recipients
  </h3>
<h3 class="endpoint">
    GET /api/v1/search/recipients
  </h3>
<p>Find valid recipients (users, courses and groups) that the current user can
send messages to. The /api/v1/search/recipients path is the preferred
endpoint, /api/v1/conversations/find_recipients is deprecated.</p>
<p>Pagination is supported.</p>
<h4>Request Parameters:</h4>
<table class="request-params">
<thead>
<tr>
<th class="param-name">Parameter</th>
<th class="param-req"></th>
<th class="param-type">Type</th>
<th class="param-desc">Description</th>
</tr>
</thead>
<tbody>
<tr class="request-param">
<td>search</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Search terms used for matching users/courses/groups (e.g. âbob smithâ). If
multiple terms are given (separated via whitespace), only results matching
all terms will be returned.</p>
</td>
</tr>
<tr class="request-param">
<td>context</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Limit the search to a particular course/group (e.g. âcourse_3â or
âgroup_4â).</p>
</td>
</tr>
<tr class="request-param">
<td>exclude[]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Array of ids to exclude from the search. These may be user ids or
course/group ids prefixed with âcourse_â or âgroup_â respectively, e.g. <a href="">exclude[]=1&amp;exclude;</a>=2&amp;exclude[]=course_3</p>
</td>
</tr>
<tr class="request-param">
<td>type</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Limit the search just to users or contexts (groups/courses).</p>
<p class="param-values">
<span class="allowed">Allowed values:</span> <code class="enum">user</code>, <code class="enum">context</code>
</p>
</td>
</tr>
<tr class="request-param">
<td>user_id</td>
<td>
</td>
<td>integer</td>
<td class="param-desc">
<p>Search for a specific user id. This ignores the other above parameters, and
will never return more than one result.</p>
</td>
</tr>
<tr class="request-param">
<td>from_conversation_id</td>
<td>
</td>
<td>integer</td>
<td class="param-desc">
<p>When searching by user_id, only users that could be normally messaged by
this user will be returned. This parameter allows you to specify a
conversation that will be referenced for a shared context â if both the
current user and the searched user are in the conversation, the user will
be returned. This is used to start new side conversations.</p>
</td>
</tr>
<tr class="request-param">
<td>permissions[]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Array of permission strings to be checked for each matched context (e.g.
âsend_messagesâ). This argument determines which permissions may be
returned in the response; it won't prevent contexts from being returned
if they don't grant the permission(s).</p>
</td>
</tr>
</tbody>
</table>
<h4>API response field:</h4>
<ul class="response_field">
<li>
<span class="type"></span>
<span class="name">id</span>
<div class="inline">
<p>The unique identifier for the user/context. For groups/courses, the id is
prefixed by âgroup_â/âcourse_â respectively.</p>
</div>
</li>
<li>
<span class="type"></span>
<span class="name">name</span>
<div class="inline">
<p>The name of the context or short name of the user</p>
</div>
</li>
<li>
<span class="type"></span>
<span class="name">full_name</span>
<div class="inline">
<p>Only set for users. The full name of the user</p>
</div>
</li>
<li>
<span class="type"></span>
<span class="name">avatar_url</span>
<div class="inline">
<p>Avatar image url for the user/context</p>
</div>
</li>
<li>
<span class="type"></span>
<span class="name">type</span>
<div class="inline"><dl class="rdoc-list label-list"><dt>âcontextâ|âcourseâ|âsectionâ|âgroupâ|âuserâ|null
<dd>
<p>Type of recipients to return, defaults to null (all). âcontextâ encompasses
âcourseâ, âsectionâ and âgroupâ</p>
</dd></dt></dl>
</div>
</li>
<li>
<span class="type"></span>
<span class="name">types[]</span>
<div class="inline">
<p>Array of recipient types to return (see type above), e.g. <a href="">types[]=user&amp;types;</a>=course</p>
</div>
</li>
<li>
<span class="type"></span>
<span class="name">user_count</span>
<div class="inline">
<p>Only set for contexts, indicates number of messageable users</p>
</div>
</li>
<li>
<span class="type"></span>
<span class="name">common_courses</span>
<div class="inline">
<p>Only set for users. Hash of course ids and enrollment types for each course
to show what they share with this user</p>
</div>
</li>
<li>
<span class="type"></span>
<span class="name">common_groups</span>
<div class="inline">
<p>Only set for users. Hash of group ids and enrollment types for each group
to show what they share with this user</p>
</div>
</li>
<li>
<span class="type"></span>
<span class="name">permissions[]</span>
<div class="inline">
<p>Only set for contexts. Mapping of requested permissions that the context
grants the current user, e.g. { send_messages: true }</p>
</div>
</li>
</ul>
<div class="examples example_response">
<h4>Example Response:</h4>
<h4><div class="inline"></div></h4>
<pre class="example code prettyprint"><code class="language-js">[
  {"id": "group_1", "name": "the group", "type": "context", "user_count": 3},
  {"id": 2, "name": "greg", "full_name": "greg jones", "common_courses": {}, "common_groups": {"1": ["Member"]}}
]</code></pre>
</div>
</div>