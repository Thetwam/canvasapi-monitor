<div class="method_details ">
<h2 class="api_method_name" data-subtopic="SIS Imports" name="method.sis_imports_api.create">
<a href="#method.sis_imports_api.create" name="method.sis_imports_api.create">
      Import SIS data
    </a>
<span class="defined-in"><a href="https://github.com/instructure/canvas-lms/blob/master/app/controllers/sis_imports_api_controller.rb">SisImportsApiController#create</a></span>
</h2>
<h3 class="endpoint">
    POST /api/v1/accounts/:account_id/sis_imports
  </h3>
<p>Import SIS data into Canvas. Must be on a root account with SIS imports
enabled.</p>
<p>For more information on the format that's expected here, please see the
âSIS CSVâ section in the API docs.</p>
<h4>Request Parameters:</h4>
<table class="request-params">
<thead>
<tr>
<th class="param-name">Parameter</th>
<th class="param-req"></th>
<th class="param-type">Type</th>
<th class="param-desc">Description</th>
</tr>
</thead>
<tbody>
<tr class="request-param">
<td>import_type</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Choose the data format for reading SIS data. With a standard Canvas
install, this option can only be 'instructure_csv', and if
unprovided, will be assumed to be so. Can be part of the query string.</p>
</td>
</tr>
<tr class="request-param">
<td>attachment</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>There are two ways to post SIS import data - either via a
multipart/form-data form-field-style attachment, or via a non-multipart raw
post request.</p>
<p>'attachment' is required for multipart/form-data style posts.
Assumed to be SIS data from a file upload form field named
'attachment'.</p>
<p>Examples:</p>
<pre class="code ruby"><code class="ruby">curl -F attachment=@&lt;filename&gt; -H "Authorization: Bearer &lt;token&gt;" \
    'https://&lt;canvas&gt;/api/v1/accounts/&lt;account_id&gt;/sis_imports.json?import_type=instructure_csv'</code></pre>
<p>If you decide to do a raw post, you can skip the 'attachment'
argument, but you will then be required to provide a suitable Content-Type
header. You are encouraged to also provide the 'extension'
argument.</p>
<p>Examples:</p>
<pre class="code ruby"><code class="ruby">curl -H 'Content-Type: application/octet-stream' --data-binary @&lt;filename&gt;.zip \
    -H "Authorization: Bearer &lt;token&gt;" \
    'https://&lt;canvas&gt;/api/v1/accounts/&lt;account_id&gt;/sis_imports.json?import_type=instructure_csv&amp;extension=zip'

curl -H 'Content-Type: application/zip' --data-binary @&lt;filename&gt;.zip \
    -H "Authorization: Bearer &lt;token&gt;" \
    'https://&lt;canvas&gt;/api/v1/accounts/&lt;account_id&gt;/sis_imports.json?import_type=instructure_csv'

curl -H 'Content-Type: text/csv' --data-binary @&lt;filename&gt;.csv \
    -H "Authorization: Bearer &lt;token&gt;" \
    'https://&lt;canvas&gt;/api/v1/accounts/&lt;account_id&gt;/sis_imports.json?import_type=instructure_csv'

curl -H 'Content-Type: text/csv' --data-binary @&lt;filename&gt;.csv \
    -H "Authorization: Bearer &lt;token&gt;" \
    'https://&lt;canvas&gt;/api/v1/accounts/&lt;account_id&gt;/sis_imports.json?import_type=instructure_csv&amp;batch_mode=1&amp;batch_mode_term_id=15'</code></pre>
</td>
</tr>
<tr class="request-param">
<td>extension</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Recommended for raw post request style imports. This field will be used to
distinguish between zip, xml, csv, and other file format extensions that
would usually be provided with the filename in the multipart post request
scenario. If not provided, this value will be inferred from the
Content-Type, falling back to zip-file format if all else fails.</p>
</td>
</tr>
<tr class="request-param">
<td>batch_mode</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>If set, this SIS import will be run in batch mode, deleting any data
previously imported via SIS that is not present in this latest import. See
the SIS CSV Format page for details. Batch mode cannot be used with
diffing.</p>
</td>
</tr>
<tr class="request-param">
<td>batch_mode_term_id</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Limit deletions to only this term. Required if batch mode is enabled.</p>
</td>
</tr>
<tr class="request-param">
<td>multi_term_batch_mode</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Runs batch mode against all terms in terms file. Requires change_threshold.</p>
</td>
</tr>
<tr class="request-param">
<td>override_sis_stickiness</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Many fields on records in Canvas can be marked âsticky,â which means that
when something changes in the UI apart from the SIS, that field gets
âstuck.â In this way, by default, SIS imports do not override UI changes.
If this field is present, however, it will tell the SIS import to ignore
âstickinessâ and override all fields.</p>
</td>
</tr>
<tr class="request-param">
<td>add_sis_stickiness</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>This option, if present, will process all changes as if they were UI
changes. This means that âstickinessâ will be added to changed fields. This
option is only processed if 'override_sis_stickiness' is also
provided.</p>
</td>
</tr>
<tr class="request-param">
<td>clear_sis_stickiness</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>This option, if present, will clear âstickinessâ from all fields touched by
this import. Requires that 'override_sis_stickiness' is also
provided. If 'add_sis_stickiness' is also provided,
'clear_sis_stickiness' will overrule the behavior of
'add_sis_stickiness'</p>
</td>
</tr>
<tr class="request-param">
<td>diffing_data_set_identifier</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>If set on a CSV import, Canvas will attempt to optimize the SIS import by
comparing this set of CSVs to the previous set that has the same data set
identifier, and only applying the difference between the two. See the SIS
CSV Format documentation for more details. Diffing cannot be used with
batch_mode</p>
</td>
</tr>
<tr class="request-param">
<td>diffing_remaster_data_set</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>If true, and diffing_data_set_identifier is sent, this SIS import will be
part of the data set, but diffing will not be performed. See the SIS CSV
Format documentation for details.</p>
</td>
</tr>
<tr class="request-param">
<td>diffing_drop_status</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>If diffing_drop_status is passed, this SIS import will use this status for
enrollments that are not included in the sis_batch. Defaults to
'deleted'</p>
<p class="param-values">
<span class="allowed">Allowed values:</span> <code class="enum">deleted</code>, <code class="enum">completed</code>, <code class="enum">inactive</code>
</p>
</td>
</tr>
<tr class="request-param">
<td>change_threshold</td>
<td>
</td>
<td>integer</td>
<td class="param-desc">
<p>If set with batch_mode, the batch cleanup process will not run if the
number of items deleted is higher than the percentage set. If set to 10 and
a term has 200 enrollments, and batch would delete more than 20 of the
enrollments the batch will abort before the enrollments are deleted. The
change_threshold will be evaluated for course, sections, and enrollments
independently. If set with diffing, diffing  will not be performed if the
files are greater than the threshold as a percent. If set to 5 and the file
is more than 5% smaller or more than 5% larger than the file that is being
compared to, diffing will not be performed. If the files are less than 5%,
diffing will be performed. See the SIS CSV Format documentation for more
details. Required for multi_term_batch_mode.</p>
</td>
</tr>
</tbody>
</table>



  Returns a 

<a href="sis_imports.html#SisImport">SisImport</a>
</div>