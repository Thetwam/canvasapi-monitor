<div class="method_details ">
<h2 class="api_method_name" data-subtopic="SIS Integration" name="method.sis_api.sis_assignments">
<a href="#method.sis_api.sis_assignments" name="method.sis_api.sis_assignments">
      Retrieve assignments enabled for grade export to SIS
    </a>
<span class="defined-in"><a href="https://github.com/instructure/canvas-lms/blob/master/app/controllers/sis_api_controller.rb">SisApiController#sis_assignments</a></span>
</h2>
<h3 class="beta">BETA: This API endpoint is not finalized, and there could be breaking changes before its final release.</h3>
<h3 class="endpoint">
    GET /api/sis/accounts/:account_id/assignments
  </h3>
<h3 class="endpoint">
    GET /api/sis/courses/:course_id/assignments
  </h3>
<p>Retrieve a list of published assignments flagged as âpost_to_sisâ. See the
Assignments API for more details on assignments. Assignment group and
section information are included for convenience.</p>
<p>Each section includes course information for the origin course and the
cross-listed course, if applicable. The `origin_course` is the course to
which the section belongs or the course from which the section was
cross-listed. Generally, the `origin_course` should be preferred when
performing integration work. The `xlist_course` is provided for consistency
and is only present when the section has been cross-listed. See Sections
API and Courses Api for me details.</p>
<p>The `override` is only provided if the Differentiated Assignments course
feature is turned on and the assignment has an override for that section.
When there is an override for the assignment the override object's
keys/values can be merged with the top level assignment object to create a
view of the assignment object specific to that section. See Assignments api
for more information on assignment overrides.</p>
<p>restricts to courses that start before this date (if they have a start
date) restricts to courses that end after this date (if they have an end
date) information to include.</p>
<pre class="code ruby"><code class="ruby"><span class="tstring"><span class="tstring_beg">"</span><span class="tstring_content">student_overrides</span><span class="tstring_end">"</span></span><span class="op">::</span> <span class="id identifier rubyid_returns">returns</span> <span class="id identifier rubyid_individual">individual</span> <span class="id identifier rubyid_student">student</span> <span class="id identifier rubyid_override">override</span> <span class="id identifier rubyid_information">information</span>
</code></pre>
<h4>Request Parameters:</h4>
<table class="request-params">
<thead>
<tr>
<th class="param-name">Parameter</th>
<th class="param-req"></th>
<th class="param-type">Type</th>
<th class="param-desc">Description</th>
</tr>
</thead>
<tbody>
<tr class="request-param">
<td>account_id</td>
<td>
</td>
<td>integer</td>
<td class="param-desc">
<p>The ID of the account to query.</p>
</td>
</tr>
<tr class="request-param">
<td>course_id</td>
<td>
</td>
<td>integer</td>
<td class="param-desc">
<p>The ID of the course to query.</p>
</td>
</tr>
<tr class="request-param">
<td>starts_before</td>
<td>
</td>
<td>DateTime</td>
<td class="param-desc">
<p>When searching on an account,</p>
</td>
</tr>
<tr class="request-param">
<td>ends_after</td>
<td>
</td>
<td>DateTime</td>
<td class="param-desc">
<p>When searching on an account,</p>
</td>
</tr>
<tr class="request-param">
<td>include</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Array of additional</p>
<p class="param-values">
<span class="allowed">Allowed values:</span> <code class="enum">student_overrides</code>
</p>
</td>
</tr>
</tbody>
</table>
</div>