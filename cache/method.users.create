<div class="method_details ">
<h2 class="api_method_name" data-subtopic="Users" name="method.users.create">
<a href="#method.users.create" name="method.users.create">
      Create a user
    </a>
<span class="defined-in"><a href="https://github.com/instructure/canvas-lms/blob/master/app/controllers/users_controller.rb">UsersController#create</a></span>
</h2>
<h3 class="endpoint">
    POST /api/v1/accounts/:account_id/users
  </h3>
<p>Create and return a new user and pseudonym for an account.</p>
<p>If you don't have the âModify login details for usersâ permission, but
self-registration is enabled on the account, you can still use this
endpoint to register new users. Certain fields will be required, and others
will be ignored (see below).</p>
<h4>Request Parameters:</h4>
<table class="request-params">
<thead>
<tr>
<th class="param-name">Parameter</th>
<th class="param-req"></th>
<th class="param-type">Type</th>
<th class="param-desc">Description</th>
</tr>
</thead>
<tbody>
<tr class="request-param">
<td>user[name]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>The full name of the user. This name will be used by teacher for grading.
Required if this is a self-registration.</p>
</td>
</tr>
<tr class="request-param">
<td>user[short_name]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>User's name as it will be displayed in discussions, messages, and
comments.</p>
</td>
</tr>
<tr class="request-param">
<td>user[sortable_name]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>User's name as used to sort alphabetically in lists.</p>
</td>
</tr>
<tr class="request-param">
<td>user[time_zone]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>The time zone for the user. Allowed time zones are
<a href="http://www.iana.org/time-zones" target="_parent" title="IANA time zones">IANA time zones</a> or friendlier
<a href="http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html" target="_parent" title="Ruby on Rails time zones">Ruby on Rails time zones</a>.</p>
</td>
</tr>
<tr class="request-param">
<td>user[locale]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>The user's preferred language, from the list of languages Canvas
supports. This is in RFC-5646 format.</p>
</td>
</tr>
<tr class="request-param">
<td>user[birthdate]</td>
<td>
</td>
<td>Date</td>
<td class="param-desc">
<p>The user's birth date.</p>
</td>
</tr>
<tr class="request-param">
<td>user[terms_of_use]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Whether the user accepts the terms of use. Required if this is a
self-registration and this canvas instance requires users to accept the
terms (on by default).</p>
<p>If this is true, it will mark the user as having accepted the terms of use.</p>
</td>
</tr>
<tr class="request-param">
<td>user[skip_registration]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Automatically mark the user as registered.</p>
<p>If this is true, it is recommended to set
<code>"pseudonym[send_confirmation]"</code> to true as well.
Otherwise, the user will not receive any messages about their account
creation.</p>
<p>The users communication channel confirmation can be skipped by setting
<code>"communication_channel[skip_confirmation]"</code> to true
as well.</p>
</td>
</tr>
<tr class="request-param">
<td>pseudonym[unique_id]</td>
<td>
        
        Required
        
      </td>
<td>string</td>
<td class="param-desc">
<p>User's login ID. If this is a self-registration, it must be a valid
email address.</p>
</td>
</tr>
<tr class="request-param">
<td>pseudonym[password]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>User's password. Cannot be set during self-registration.</p>
</td>
</tr>
<tr class="request-param">
<td>pseudonym[sis_user_id]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>SIS ID for the user's account. To set this parameter, the caller must
be able to manage SIS permissions.</p>
</td>
</tr>
<tr class="request-param">
<td>pseudonym[integration_id]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Integration ID for the login. To set this parameter, the caller must be
able to manage SIS permissions. The Integration ID is a secondary
identifier useful for more complex SIS integrations.</p>
</td>
</tr>
<tr class="request-param">
<td>pseudonym[send_confirmation]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Send user notification of account creation if true. Automatically set to
true during self-registration.</p>
</td>
</tr>
<tr class="request-param">
<td>pseudonym[force_self_registration]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Send user a self-registration style email if true. Setting it means the
users will get a notification asking them to âcomplete the registration
processâ by clicking it, setting a password, and letting them in.  Will
only be executed on if the user does not need admin approval. Defaults to
false unless explicitly provided.</p>
</td>
</tr>
<tr class="request-param">
<td>pseudonym[authentication_provider_id]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>The authentication provider this login is associated with. Logins
associated with a specific provider can only be used with that provider.
Legacy providers (LDAP, CAS, SAML) will search for logins associated with
them, or unassociated logins. New providers will only search for logins
explicitly associated with them. This can be the integer ID of the
provider, or the type of the provider (in which case, it will find the
first matching provider).</p>
</td>
</tr>
<tr class="request-param">
<td>communication_channel[type]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>The communication channel type, e.g. 'email' or 'sms'.</p>
</td>
</tr>
<tr class="request-param">
<td>communication_channel[address]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>The communication channel address, e.g. the user's email address.</p>
</td>
</tr>
<tr class="request-param">
<td>communication_channel[confirmation_url]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Only valid for account admins. If true, returns the new user account
confirmation URL in the response.</p>
</td>
</tr>
<tr class="request-param">
<td>communication_channel[skip_confirmation]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Only valid for site admins and account admins making requests; If true, the
channel is automatically validated and no confirmation email or SMS is
sent. Otherwise, the user must respond to a confirmation message to confirm
the channel.</p>
<p>If this is true, it is recommended to set
<code>"pseudonym[send_confirmation]"</code> to true as well.
Otherwise, the user will not receive any messages about their account
creation.</p>
</td>
</tr>
<tr class="request-param">
<td>force_validations</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>If true, validations are performed on the newly created user (and their
associated pseudonym) even if the request is made by a privileged user like
an admin. When set to false, or not included in the request parameters, any
newly created users are subject to validations unless the request is made
by a user with a 'manage_user_logins' right. In which case, certain
validations such as 'require_acceptance_of_terms' and
'require_presence_of_name' are not enforced. Use this parameter to
return helpful json errors while building users with an admin request.</p>
</td>
</tr>
<tr class="request-param">
<td>enable_sis_reactivation</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>When true, will first try to re-activate a deleted user with matching
sis_user_id if possible.</p>
</td>
</tr>
</tbody>
</table>



  Returns a 

<a href="users.html#User">User</a>
</div>