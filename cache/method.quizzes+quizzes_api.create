<div class="method_details ">
<h2 class="api_method_name" data-subtopic="Quizzes" name="method.quizzes/quizzes_api.create">
<a href="#method.quizzes/quizzes_api.create" name="method.quizzes/quizzes_api.create">
      Create a quiz
    </a>
<span class="defined-in"><a href="https://github.com/instructure/canvas-lms/blob/master/app/controllers/quizzes/quizzes_api_controller.rb">Quizzes::QuizzesApiController#create</a></span>
</h2>
<h3 class="endpoint">
    POST /api/v1/courses/:course_id/quizzes
  </h3>
<p>Create a new quiz for this course.</p>
<h4>Request Parameters:</h4>
<table class="request-params">
<thead>
<tr>
<th class="param-name">Parameter</th>
<th class="param-req"></th>
<th class="param-type">Type</th>
<th class="param-desc">Description</th>
</tr>
</thead>
<tbody>
<tr class="request-param">
<td>quiz[title]</td>
<td>
        
        Required
        
      </td>
<td>string</td>
<td class="param-desc">
<p>The quiz title.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[description]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>A description of the quiz.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[quiz_type]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>The type of quiz.</p>
<p class="param-values">
<span class="allowed">Allowed values:</span> <code class="enum">practice_quiz</code>, <code class="enum">assignment</code>, <code class="enum">graded_survey</code>, <code class="enum">survey</code>
</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[assignment_group_id]</td>
<td>
</td>
<td>integer</td>
<td class="param-desc">
<p>The assignment group id to put the assignment in. Defaults to the top
assignment group in the course. Only valid if the quiz is graded, i.e. if
quiz_type is âassignmentâ or âgraded_surveyâ.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[time_limit]</td>
<td>
</td>
<td>integer</td>
<td class="param-desc">
<p>Time limit to take this quiz, in minutes. Set to null for no time limit.
Defaults to null.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[shuffle_answers]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>If true, quiz answers for multiple choice questions will be randomized for
each student. Defaults to false.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[hide_results]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Dictates whether or not quiz results are hidden from students. If null,
students can see their results after any attempt. If âalwaysâ, students can
never see their results. If âuntil_after_last_attemptâ, students can only
see results after their last attempt. (Only valid if allowed_attempts &gt;
1). Defaults to null.</p>
<p class="param-values">
<span class="allowed">Allowed values:</span> <code class="enum">always</code>, <code class="enum">until_after_last_attempt</code>
</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[show_correct_answers]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Only valid if hide_results=null If false, hides correct answers from
students when quiz results are viewed. Defaults to true.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[show_correct_answers_last_attempt]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Only valid if show_correct_answers=true and allowed_attempts &gt; 1 If
true, hides correct answers from students when quiz results are viewed
until they submit the last attempt for the quiz. Defaults to false.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[show_correct_answers_at]</td>
<td>
</td>
<td>DateTime</td>
<td class="param-desc">
<p>Only valid if show_correct_answers=true If set, the correct answers will be
visible by students only after this date, otherwise the correct answers are
visible once the student hands in their quiz submission.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[hide_correct_answers_at]</td>
<td>
</td>
<td>DateTime</td>
<td class="param-desc">
<p>Only valid if show_correct_answers=true If set, the correct answers will
stop being visible once this date has passed. Otherwise, the correct
answers will be visible indefinitely.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[allowed_attempts]</td>
<td>
</td>
<td>integer</td>
<td class="param-desc">
<p>Number of times a student is allowed to take a quiz. Set to -1 for
unlimited attempts. Defaults to 1.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[scoring_policy]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Required and only valid if allowed_attempts &gt; 1. Scoring policy for a
quiz that students can take multiple times. Defaults to âkeep_highestâ.</p>
<p class="param-values">
<span class="allowed">Allowed values:</span> <code class="enum">keep_highest</code>, <code class="enum">keep_latest</code>
</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[one_question_at_a_time]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>If true, shows quiz to student one question at a time. Defaults to false.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[cant_go_back]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Only valid if one_question_at_a_time=true If true, questions are locked
after answering. Defaults to false.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[access_code]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Restricts access to the quiz with a password. For no access code
restriction, set to null. Defaults to null.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[ip_filter]</td>
<td>
</td>
<td>string</td>
<td class="param-desc">
<p>Restricts access to the quiz to computers in a specified IP range. Filters
can be a comma-separated list of addresses, or an address followed by a
mask</p>
<p>Examples:</p>
<pre class="code ruby"><code class="ruby"><span class="tstring"><span class="tstring_beg">"</span><span class="tstring_content">192.168.217.1</span><span class="tstring_end">"</span></span>
<span class="tstring"><span class="tstring_beg">"</span><span class="tstring_content">192.168.217.1/24</span><span class="tstring_end">"</span></span>
<span class="tstring"><span class="tstring_beg">"</span><span class="tstring_content">192.168.217.1/255.255.255.0</span><span class="tstring_end">"</span></span>
</code></pre>
<p>For no IP filter restriction, set to null. Defaults to null.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[due_at]</td>
<td>
</td>
<td>DateTime</td>
<td class="param-desc">
<p>The day/time the quiz is due. Accepts times in ISO 8601 format, e.g.
2011-10-21T18:48Z.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[lock_at]</td>
<td>
</td>
<td>DateTime</td>
<td class="param-desc">
<p>The day/time the quiz is locked for students. Accepts times in ISO 8601
format, e.g. 2011-10-21T18:48Z.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[unlock_at]</td>
<td>
</td>
<td>DateTime</td>
<td class="param-desc">
<p>The day/time the quiz is unlocked for students. Accepts times in ISO 8601
format, e.g. 2011-10-21T18:48Z.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[published]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Whether the quiz should have a draft state of published or unpublished.
NOTE: If students have started taking the quiz, or there are any
submissions for the quiz, you may not unpublish a quiz and will recieve an
error.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[one_time_results]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Whether students should be prevented from viewing their quiz results past
the first time (right after they turn the quiz in.) Only valid if
âhide_resultsâ is not set to âalwaysâ. Defaults to false.</p>
</td>
</tr>
<tr class="request-param">
<td>quiz[only_visible_to_overrides]</td>
<td>
</td>
<td>boolean</td>
<td class="param-desc">
<p>Whether this quiz is only visible to overrides (Only useful if
'differentiated assignments' account setting is on) Defaults to
false.</p>
</td>
</tr>
</tbody>
</table>



  Returns a 

<a href="quizzes.html#Quiz">Quiz</a>
</div>