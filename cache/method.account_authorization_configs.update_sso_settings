<div class="method_details ">
<h2 class="api_method_name" data-subtopic="Authentication Providers" name="method.account_authorization_configs.update_sso_settings">
<a href="#method.account_authorization_configs.update_sso_settings" name="method.account_authorization_configs.update_sso_settings">
      update account auth settings
    </a>
<span class="defined-in"><a href="https://github.com/instructure/canvas-lms/blob/master/app/controllers/account_authorization_configs_controller.rb">AccountAuthorizationConfigsController#update_sso_settings</a></span>
</h2>
<h3 class="endpoint">
    PUT /api/v1/accounts/:account_id/sso_settings
  </h3>
<p>For various cases of mixed SSO configurations, you may need to set some
configuration at the account level to handle the particulars of your setup.</p>
<p>This endpoint accepts a PUT request to set several possible account
settings. All setting are optional on each request, any that are not
provided at all are simply retained as is.  Any that provide the key but a
null-ish value (blank string, null, undefined) will be UN-set.</p>
<p>You can list the current state of each setting with âshow_sso_settingsâ</p>
<div class="examples">
<h4>Example Request:</h4>
<h4><div class="inline"></div></h4>
<pre class="example code prettyprint"><code class="language-bash">curl -XPUT 'https://&lt;canvas&gt;/api/v1/accounts/&lt;account_id&gt;/sso_settings' \
     -F 'sso_settings[auth_discovery_url]=&lt;new_url&gt;' \
     -F 'sso_settings[change_password_url]=&lt;new_url&gt;' \
     -F 'sso_settings[login_handle_name]=&lt;new_handle&gt;' \
     -H 'Authorization: Bearer &lt;token&gt;'</code></pre>
</div>



  Returns a 

<a href="authentication_providers.html#SSOSettings">SSOSettings</a>
</div>